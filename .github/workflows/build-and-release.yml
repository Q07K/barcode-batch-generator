name: Build and Release

on:
  push:
    tags:
      - 'v*.*.*'  # v1.0.0, v2.1.3 등의 태그에서만 실행
  workflow_dispatch:  # 수동 실행 허용

jobs:
  build:
    runs-on: ${{ matrix.os }}
    
    strategy:
      matrix:
        os: [windows-latest, macos-latest, ubuntu-latest]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build application
      run: npm run build
      
    - name: Build distributable
      run: npm run dist
      
    - name: Package Windows build
      if: matrix.os == 'windows-latest'
      run: |
        cd release
        Compress-Archive -Path win-unpacked -DestinationPath barcode-batch-generator-win32-x64.zip
      shell: pwsh
      
    - name: Upload Windows artifacts
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v4
      with:
        name: windows-build
        path: release/barcode-batch-generator-win32-x64.zip
        
    - name: Package macOS build
      if: matrix.os == 'macos-latest'
      run: |
        cd release
        zip -r barcode-batch-generator-darwin-x64.zip *.app || echo "No .app files found"
        
    - name: Upload macOS artifacts
      if: matrix.os == 'macos-latest'
      uses: actions/upload-artifact@v4
      with:
        name: macos-build
        path: release/barcode-batch-generator-darwin-x64.zip
        
    - name: Package Linux build
      if: matrix.os == 'ubuntu-latest'
      run: |
        cd release
        zip -r barcode-batch-generator-linux-x64.zip *.AppImage || echo "No AppImage files found"
        
    - name: Upload Linux artifacts
      if: matrix.os == 'ubuntu-latest'
      uses: actions/upload-artifact@v4
      with:
        name: linux-build
        path: release/barcode-batch-generator-linux-x64.zip
        
  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        files: |
          windows-build/*
          macos-build/*
          linux-build/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
